from sudoku import Sudoku
from group import Group
from cell import Cell

# cache the numbers of bits in bitfields
how_many = []
for i in range(1 << 16):
	n = 0
	for j in range(16):
		if i & (1 << j): n += 1
	how_many.append(n)

def Sudokube():
	groups = []
	for i in range(18):
		g = Group()
		g.i = i
		groups.append(g)
	def c(g1, g2, g3):
		return Cell(groups[g1], groups[g2], groups[g3])
	# don't bother generating the grid, we did that in js and here is the result:
	cells = [c(12,0,4),c(12,0,5),c(12,0,6),c(12,0,7),c(12,1,4),c(12,1,5),c(12,1,6),c(12,1,7),c(12,2,4),c(12,2,5),c(12,2,6),c(12,2,7),c(12,3,4),c(12,3,5),c(12,3,6),c(12,3,7),c(13,0,7),c(13,0,6),c(13,0,5),c(13,0,4),c(13,1,7),c(13,1,6),c(13,1,5),c(13,1,4),c(13,2,7),c(13,2,6),c(13,2,5),c(13,2,4),c(13,3,7),c(13,3,6),c(13,3,5),c(13,3,4),c(14,8,4),c(14,8,5),c(14,8,6),c(14,8,7),c(14,9,4),c(14,9,5),c(14,9,6),c(14,9,7),c(14,10,4),c(14,10,5),c(14,10,6),c(14,10,7),c(14,11,4),c(14,11,5),c(14,11,6),c(14,11,7),c(15,8,7),c(15,8,6),c(15,8,5),c(15,8,4),c(15,9,7),c(15,9,6),c(15,9,5),c(15,9,4),c(15,10,7),c(15,10,6),c(15,10,5),c(15,10,4),c(15,11,7),c(15,11,6),c(15,11,5),c(15,11,4),c(16,0,11),c(16,0,10),c(16,0,9),c(16,0,8),c(16,1,11),c(16,1,10),c(16,1,9),c(16,1,8),c(16,2,11),c(16,2,10),c(16,2,9),c(16,2,8),c(16,3,11),c(16,3,10),c(16,3,9),c(16,3,8),c(17,0,8),c(17,0,9),c(17,0,10),c(17,0,11),c(17,1,8),c(17,1,9),c(17,1,10),c(17,1,11),c(17,2,8),c(17,2,9),c(17,2,10),c(17,2,11),c(17,3,8),c(17,3,9),c(17,3,10),c(17,3,11)]
	return Sudoku(groups, cells, how_many)
